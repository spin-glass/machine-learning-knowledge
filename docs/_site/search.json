[
  {
    "objectID": "sample.html",
    "href": "sample.html",
    "title": "合成データを用いた機械学習の概念の解説",
    "section": "",
    "text": "本ページでは合成データを用いた多項式フィッティングを例に、機械学習の基本となる以下のトピックについて解説します",
    "crumbs": [
      "合成データを用いた機械学習の概念の解説"
    ]
  },
  {
    "objectID": "sample.html#定義",
    "href": "sample.html#定義",
    "title": "合成データを用いた機械学習の概念の解説",
    "section": "定義",
    "text": "定義\n合成データとは、実際のデータの特性を模倣して人工的に生成されたデータセットであり、機械学習アルゴリズムの学習目的で利用されます\nここではsin関数 \\(\\sin(2\\pi x)\\) を使って合成データを生成します\n入力変数\\(x\\)は [0, 1] の範囲で一様に選び、\\(\\sin\\)関数により目標変数\\(t\\)の値を計算します",
    "crumbs": [
      "合成データを用いた機械学習の概念の解説"
    ]
  },
  {
    "objectID": "sample.html#ノイズ",
    "href": "sample.html#ノイズ",
    "title": "合成データを用いた機械学習の概念の解説",
    "section": "ノイズ",
    "text": "ノイズ\n実際のデータセットにはノイズが含まれるため、正規分布に基づくノイズを各データに追加します",
    "crumbs": [
      "合成データを用いた機械学習の概念の解説"
    ]
  },
  {
    "objectID": "sample.html#汎化",
    "href": "sample.html#汎化",
    "title": "合成データを用いた機械学習の概念の解説",
    "section": "汎化",
    "text": "汎化\n合成データを用いた訓練を通じて、モデルが見たことのない新しいデータに対して正確な予測ができるようにするできるようにモデルを汎化することが目的です",
    "crumbs": [
      "合成データを用いた機械学習の概念の解説"
    ]
  },
  {
    "objectID": "sample.html#目的",
    "href": "sample.html#目的",
    "title": "合成データを用いた機械学習の概念の解説",
    "section": "目的",
    "text": "目的\n\n訓練セットを利用して、新たな入力変数 \\(x_b\\) に対する目的変数 \\(b_t\\) の値を予測する",
    "crumbs": [
      "合成データを用いた機械学習の概念の解説"
    ]
  },
  {
    "objectID": "sample.html#多項式フィッティング",
    "href": "sample.html#多項式フィッティング",
    "title": "合成データを用いた機械学習の概念の解説",
    "section": "多項式フィッティング",
    "text": "多項式フィッティング\n多項式フィッティングは、与えられたデータに基づいて最適な多項式関数で表現戯れる曲線を見つけることを目的とします\n多項式フィッティングはこの線形モデルの１つであり、入力変数 (x) の多項式（例えば (x^2), (x^3) など）を用いて目標変数 (t) を予測します\n多項式関数は以下で表現できます \\[ y(x, w) = w_0 + w_1x + w_2x^2 + \\ldots + w_Mx^M \\ \\]\n\nM: 多項式の次数であり、モデルの複雑さを決定する\nx: 入力変数\ny: 目的変数\nw: 多項式の係数を表すベクトルで、各係数 (w_0, w_1, …, w_M) は多項式の次数に対応\n\n上の式では、多項式フィッティングにおける各項\\(x,x^2, x^3\\)が、その係数\\(w_1, w_2, w_3\\)に対して線形です そのため、入力変数 (x) に対する多項式の各項が非線形でも、モデル全体としてのパラメータに関しては線形モデルと見なされます",
    "crumbs": [
      "合成データを用いた機械学習の概念の解説"
    ]
  },
  {
    "objectID": "sample.html#多項式の次数",
    "href": "sample.html#多項式の次数",
    "title": "合成データを用いた機械学習の概念の解説",
    "section": "多項式の次数",
    "text": "多項式の次数\n多項式の次数 M の選択は、モデル比較やモデル選択という重要な概念に関連しています\nこの選択がモデルの性能にどのように影響するかを理解するために、以下の点に注目します\n\n次数の低い多項式:\n\nM = 0（定数）と M = 1（1次式）の多項式は、データに対して適合性が低く、関数 ((2x)) をうまく表現できません\n\n\n\n中程度の次数の多項式:\n\nM = 3 の多項式は、示された例で ((2x)) 関数に最も適合しており、データと良好なバランスを示しています\n\n\n高次の多項式:\n\nM = 9 とすると、トレーニングデータに対しては非常によくフィットしますが、過適合（オーバーフィッティング）の問題が生じます。この多項式は訓練データの各点を正確に通過しますが、データ点間で関数が大きく振動します",
    "crumbs": [
      "合成データを用いた機械学習の概念の解説"
    ]
  },
  {
    "objectID": "sample.html#統計モデルとdeeplearning",
    "href": "sample.html#統計モデルとdeeplearning",
    "title": "合成データを用いた機械学習の概念の解説",
    "section": "統計モデルとDeepLearning",
    "text": "統計モデルとDeepLearning\nデータセットが大きくなると、より複雑なモデルを使用しても過適合の問題が軽減されます\n統計学では、パラメータの信頼性の高い推定を確保するためモデルのパラメータ数よりも多くのデータ点が必要とされることが一般的です\n一方ディープラーニングでは、パラメータ数が非常に多いモデルを使用しても、大量のデータが利用できる場合には、非常に高い性能を達成することが可能です\nこの違いは、ディープラーニングが複雑なパターンを学習する能力と、大規模なデータセットから情報を抽出する能力に由来します",
    "crumbs": [
      "合成データを用いた機械学習の概念の解説"
    ]
  },
  {
    "objectID": "sample.html#モデルの汎化性能の評価",
    "href": "sample.html#モデルの汎化性能の評価",
    "title": "合成データを用いた機械学習の概念の解説",
    "section": "モデルの汎化性能の評価",
    "text": "モデルの汎化性能の評価\n\nテストセットでの評価の重要性\n\n多項式の次数 \\(M\\) により汎化性能が変化\nテストセットで未見データのモデル挙動を観察\n\n性能評価方法\n\nテストセット上で \\(E(w^*)\\) を計算\n\\(E(w^*)\\) はテストデータ適合度を示す\n小さい\\(E(w^*)\\)は高い汎化性能を意味\n\n平均二乗根誤差（RMS Error）\n\n計算式: \\[\\text{RMS Error} = \\sqrt{\\frac{1}{N} \\sum_{n=1}^{N} (y(x_n, w^*) - t_n)^2}\\]\nN: テストデータ数\n\\(y(x_n, w^*)\\): 予測値, \\(t_n\\): 実際の目標値\nRMSエラーが小さいほど予測精度が高い\n\n性能評価の視覚化\n\n図1.7: \\(M\\)の異なる値でのトレーニングセットとテストセットの RMS エラーをグラフ化\n\n\n\nMが高い場合の過適合とその影響を視覚的に表示\nM = 3が最もバランスがよい",
    "crumbs": [
      "合成データを用いた機械学習の概念の解説"
    ]
  },
  {
    "objectID": "sample.html#正則化とは",
    "href": "sample.html#正則化とは",
    "title": "合成データを用いた機械学習の概念の解説",
    "section": "正則化とは",
    "text": "正則化とは\n\nモデルのパラメータ数を単に制限する代わりに、問題の複雑さに合わせてモデルの複雑さを調整する方法です\n正則化は、誤差関数にペナルティ項を追加することで、係数の大きさを抑制し、過適合を防ぎます",
    "crumbs": [
      "合成データを用いた機械学習の概念の解説"
    ]
  },
  {
    "objectID": "sample.html#正則化の方法",
    "href": "sample.html#正則化の方法",
    "title": "合成データを用いた機械学習の概念の解説",
    "section": "正則化の方法",
    "text": "正則化の方法\n\n誤差関数にペナルティ項を追加\n\nペナルティ項は、全ての係数の二乗の和として定義されることが多いです\n正則化された誤差関数は次のように表されます \\[E_{\\text{reg}}(w) = \\sum_{n=1}^{N} (y(x_n, w) - t_n)^2 + \\lambda \\sum_{j=0}^{M} w_j^2\\]\nここで $$ は正則化の強さを調整するパラメータ",
    "crumbs": [
      "合成データを用いた機械学習の概念の解説"
    ]
  },
  {
    "objectID": "sample.html#正則化の効果",
    "href": "sample.html#正則化の効果",
    "title": "合成データを用いた機械学習の概念の解説",
    "section": "正則化の効果",
    "text": "正則化の効果\n\n高次多項式の過適合の抑制\n\n正則化を利用することで、\\(M = 9\\)のような高次多項式でも過適合が抑えられるようになります\n\\(\\lambda\\) の値を調整することで、モデルの適合度と汎化能力のバランスを取ります",
    "crumbs": [
      "合成データを用いた機械学習の概念の解説"
    ]
  },
  {
    "objectID": "sample.html#正則化パラメータの影響",
    "href": "sample.html#正則化パラメータの影響",
    "title": "合成データを用いた機械学習の概念の解説",
    "section": "正則化パラメータの影響",
    "text": "正則化パラメータの影響\n\n$$の異なる値によるフィッティングの例\n\n\\(\\ln\\lambda = -18\\)で適切なフィッティングが得られ、過適合が抑制されています\n\n\n\n\\(\\ln\\lambda = 0\\)の場合は、正則化が強すぎるためモデルの係数が小さく抑えられ、データの特徴を捉えられていません\n\n\n\n\\(\\lambda = -\\infty\\) (正則化なし)の場合はフィッティングが不十分で、過適合が目立ちます",
    "crumbs": [
      "合成データを用いた機械学習の概念の解説"
    ]
  },
  {
    "objectID": "sample.html#正則化による汎化性能の可視化",
    "href": "sample.html#正則化による汎化性能の可視化",
    "title": "合成データを用いた機械学習の概念の解説",
    "section": "正則化による汎化性能の可視化",
    "text": "正則化による汎化性能の可視化\n\n訓練データとテストデータにおける平均二乗根誤差（RMSエラー）を \\(\\ln\\lambda\\)に対してプロット\n\n以下の図はRMSエラーの \\(\\ln(\\lambda)\\)に対するグラフで、正則化の強さが汎化エラーに与える影響を示します\n\n正則化が強いほど汎化エラーが低減しますが、強すぎるとデータの適合度が損なわれます",
    "crumbs": [
      "合成データを用いた機械学習の概念の解説"
    ]
  },
  {
    "objectID": "sample.html#モデル選択の重要性",
    "href": "sample.html#モデル選択の重要性",
    "title": "合成データを用いた機械学習の概念の解説",
    "section": "モデル選択の重要性",
    "text": "モデル選択の重要性\n\nモデル選択は、モデルの過適合を防ぎつつ最適な汎化能力を得るために必要です\nハイパーパラメータには多項式の次数 \\(M\\) や正則化パラメータ \\(\\lambda\\) が含まれます",
    "crumbs": [
      "合成データを用いた機械学習の概念の解説"
    ]
  },
  {
    "objectID": "sample.html#ハイパーパラメータの調整",
    "href": "sample.html#ハイパーパラメータの調整",
    "title": "合成データを用いた機械学習の概念の解説",
    "section": "ハイパーパラメータの調整",
    "text": "ハイパーパラメータの調整\n\n\\(\\lambda\\) や \\(M\\) を最適化するためには、訓練データとは別に検証データセットを用いることが一般的です。\n適切な \\(\\lambda\\) や \\(M\\) の値を見つけるためには、検証セット上でのエラーが最も低いモデルを選択します",
    "crumbs": [
      "合成データを用いた機械学習の概念の解説"
    ]
  },
  {
    "objectID": "sample.html#検証セットとクロスバリデーション",
    "href": "sample.html#検証セットとクロスバリデーション",
    "title": "合成データを用いた機械学習の概念の解説",
    "section": "検証セットとクロスバリデーション",
    "text": "検証セットとクロスバリデーション\n\nデータを訓練セットと検証セットに分け、検証セットを使用してモデルの汎化能力を評価します\nクロスバリデーションは、データを複数のサブセットに分け、それぞれのサブセットでモデルを訓練し、残りのサブセットでテストすることで、モデルの堅牢性を確認します",
    "crumbs": [
      "合成データを用いた機械学習の概念の解説"
    ]
  },
  {
    "objectID": "sample.html#クロスバリデーションの手法",
    "href": "sample.html#クロスバリデーションの手法",
    "title": "合成データを用いた機械学習の概念の解説",
    "section": "クロスバリデーションの手法",
    "text": "クロスバリデーションの手法\n\nS-foldクロスバリデーションでは、データを \\(S\\) グループに分け、\\(S-1\\) グループを使用して訓練し、残った1グループで性能を評価します。このプロセスを繰り返して、平均的なモデル性能を得ます",
    "crumbs": [
      "合成データを用いた機械学習の概念の解説"
    ]
  },
  {
    "objectID": "sample.html#ハイパーパラメータの課題",
    "href": "sample.html#ハイパーパラメータの課題",
    "title": "合成データを用いた機械学習の概念の解説",
    "section": "ハイパーパラメータの課題",
    "text": "ハイパーパラメータの課題\n\n大規模なモデルやデータセットでは、ハイパーパラメータの選択肢が多く、最適な設定を見つけるのが困難です\nモデルの訓練が計算コストが高い場合、クロスバリデーションを含む多くの訓練コストが必要になることがあります",
    "crumbs": [
      "合成データを用いた機械学習の概念の解説"
    ]
  }
]